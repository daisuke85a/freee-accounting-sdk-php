<?php
/**
 * UsersCapabilitiesResponseTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Freee\Accounting
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * freee API
 *
 * <h1 id=\"freee_api\">freee API</h1> <hr /> <h2 id=\"\">はじめに</h2>  <ol> <li><a href=\"https://secure.freee.co.jp/\">freee</a>にサインアップします。</li>  <li><a href=\"https://accounts.secure.freee.co.jp/public_api/applications\">アプリケーション一覧</a>から「新しいアプリケーションを登録」します。</li>  <li>アプリケーションの登録が完了すると、Client IDとSecretが取得できます。</li>  <li>ローカルの開発環境でテストする際は、認証用URLを直接リクエストしてAuthorization Codeを取得できます。</li> </ol>  <p>アプリケーションの登録方法や認証方法、またはAPIの活用方法でご不明な点がある場合は<a href=\"https://support.freee.co.jp/hc/ja/sections/115000030743\">ヘルプセンター</a>もご確認ください</p> <hr /> <h2 id=\"_2\">仕様</h2>  <h3 id=\"api\">APIエンドポイント</h3>  <p>https://api.freee.co.jp/ (httpsのみ)</p>  <h3 id=\"_3\">認証方式</h3>  <p><a href=\"http://tools.ietf.org/html/rfc6749\">OAuth2</a>に対応</p>  <ul> <li>Authorization Code Flow (Webアプリ向け)</li>  <li>Implicit Flow (Mobileアプリ向け)</li> </ul>  <h3 id=\"_4\">認証エンドポイント</h3>  <p>https://accounts.secure.freee.co.jp/</p>  <ul> <li>authorize : https://accounts.secure.freee.co.jp/public_api/authorize</li>  <li>token : https://accounts.secure.freee.co.jp/public_api/token</li> </ul>  <h3 id=\"_5\">アクセストークンのリフレッシュ</h3>  <p>認証時に得たrefresh_token を使ってtoken の期限をリフレッシュして新規に発行することが出来ます。</p>  <p>grant_type=refresh_token で https://accounts.secure.freee.co.jp/public_api/token にアクセスすればリフレッシュされます。</p>  <p>e.g.)</p>  <p>POST: https://accounts.secure.freee.co.jp/public_api/token</p>  <p>params: grant_type=refresh_token&amp;client_id=UID&amp;client_secret=SECRET&amp;refresh_token=REFRESH_TOKEN</p>  <p>詳細は<a href=\"https://github.com/applicake/doorkeeper/wiki/Enable-Refresh-Token-Credentials#flow\">refresh_token</a>を参照下さい。</p>  <h3 id=\"_6\">アクセストークンの破棄</h3>  <p>認証時に得たaccess_tokenまたはrefresh_tokenを使って、tokenを破棄することができます。 token=access_tokenまたはtoken=refresh_tokenでhttps://accounts.secure.freee.co.jp/public_api/revokeにアクセスすると破棄されます。token_type_hintでaccess_tokenまたはrefresh_tokenを陽に指定できます。</p>  <p>e.g.)</p>  <p>POST: https://accounts.secure.freee.co.jp/public_api/revoke</p>  <p>params: token=ACCESS_TOKEN</p>  <p>または</p>  <p>params: token=REFRESH_TOKEN</p>  <p>または</p>  <p>params: token=ACCESS_TOKEN&amp;token_type_hint=access_token</p>  <p>または</p>  <p>params: token=REFRESH_TOKEN&amp;token_type_hint=refresh_token</p>  <p>詳細は <a href=\"https://tools.ietf.org/html/rfc7009\">OAuth 2.0 Token revocation</a> をご参照ください。</p>  <h3 id=\"_7\">データフォーマット</h3>  <p>リクエスト、レスポンスともにJSON形式をサポート</p>  <h3 id=\"_8\">共通レスポンスヘッダー</h3>  <p>すべてのAPIのレスポンスには以下のHTTPヘッダーが含まれます。</p>  <ul> <li> <p>X-Freee-Request-ID</p> <ul> <li>各リクエスト毎に発行されるID</li> </ul> </li> </ul>  <h3 id=\"_9\">共通エラーレスポンス</h3>  <ul> <li> <p>ステータスコードはレスポンス内のJSONに含まれる他、HTTPヘッダにも含まれる</p> </li>  <li> <p>type</p>  <ul> <li>status : HTTPステータスコードの説明</li>  <li>validation : エラーの詳細の説明（開発者向け）</li> </ul> </li> </ul>  <p>レスポンスの例</p>  <pre><code>  {     &quot;status_code&quot; : 400,     &quot;errors&quot; : [       {         &quot;type&quot; : &quot;status&quot;,         &quot;messages&quot; : [&quot;不正なリクエストです。&quot;]       },       {         &quot;type&quot; : &quot;validation&quot;,         &quot;messages&quot; : [&quot;Date は不正な日付フォーマットです。入力例：2013-01-01&quot;]       }     ]   }</code></pre> <hr /> <h2 id=\"_10\">連絡先</h2>  <p>ご不明点、ご要望等は <a href=\"https://support.freee.co.jp/hc/ja/requests/new\">freee サポートデスクへのお問い合わせフォーム</a> からご連絡ください。</p> <hr />&copy; Since 2013 freee K.K.
 *
 * The version of the OpenAPI document: v1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.1.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Freee\Accounting;

use PHPUnit\Framework\TestCase;

/**
 * UsersCapabilitiesResponseTest Class Doc Comment
 *
 * @category    Class
 * @description UsersCapabilitiesResponse
 * @package     Freee\Accounting
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class UsersCapabilitiesResponseTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "UsersCapabilitiesResponse"
     */
    public function testUsersCapabilitiesResponse()
    {
    }

    /**
     * Test attribute "wallet_txns"
     */
    public function testPropertyWalletTxns()
    {
    }

    /**
     * Test attribute "deals"
     */
    public function testPropertyDeals()
    {
    }

    /**
     * Test attribute "transfers"
     */
    public function testPropertyTransfers()
    {
    }

    /**
     * Test attribute "docs"
     */
    public function testPropertyDocs()
    {
    }

    /**
     * Test attribute "doc_postings"
     */
    public function testPropertyDocPostings()
    {
    }

    /**
     * Test attribute "receipts"
     */
    public function testPropertyReceipts()
    {
    }

    /**
     * Test attribute "receipt_stream_editor"
     */
    public function testPropertyReceiptStreamEditor()
    {
    }

    /**
     * Test attribute "expense_applications"
     */
    public function testPropertyExpenseApplications()
    {
    }

    /**
     * Test attribute "spreadsheets"
     */
    public function testPropertySpreadsheets()
    {
    }

    /**
     * Test attribute "payment_requests"
     */
    public function testPropertyPaymentRequests()
    {
    }

    /**
     * Test attribute "request_forms"
     */
    public function testPropertyRequestForms()
    {
    }

    /**
     * Test attribute "approval_requests"
     */
    public function testPropertyApprovalRequests()
    {
    }

    /**
     * Test attribute "reports"
     */
    public function testPropertyReports()
    {
    }

    /**
     * Test attribute "reports_income_expense"
     */
    public function testPropertyReportsIncomeExpense()
    {
    }

    /**
     * Test attribute "reports_receivables"
     */
    public function testPropertyReportsReceivables()
    {
    }

    /**
     * Test attribute "reports_payables"
     */
    public function testPropertyReportsPayables()
    {
    }

    /**
     * Test attribute "reports_cash_balance"
     */
    public function testPropertyReportsCashBalance()
    {
    }

    /**
     * Test attribute "reports_crosstabs"
     */
    public function testPropertyReportsCrosstabs()
    {
    }

    /**
     * Test attribute "reports_general_ledgers"
     */
    public function testPropertyReportsGeneralLedgers()
    {
    }

    /**
     * Test attribute "reports_pl"
     */
    public function testPropertyReportsPl()
    {
    }

    /**
     * Test attribute "reports_bs"
     */
    public function testPropertyReportsBs()
    {
    }

    /**
     * Test attribute "reports_journals"
     */
    public function testPropertyReportsJournals()
    {
    }

    /**
     * Test attribute "reports_managements_planning"
     */
    public function testPropertyReportsManagementsPlanning()
    {
    }

    /**
     * Test attribute "reports_managements_navigation"
     */
    public function testPropertyReportsManagementsNavigation()
    {
    }

    /**
     * Test attribute "manual_journals"
     */
    public function testPropertyManualJournals()
    {
    }

    /**
     * Test attribute "fixed_assets"
     */
    public function testPropertyFixedAssets()
    {
    }

    /**
     * Test attribute "inventory_refreshes"
     */
    public function testPropertyInventoryRefreshes()
    {
    }

    /**
     * Test attribute "biz_allocations"
     */
    public function testPropertyBizAllocations()
    {
    }

    /**
     * Test attribute "payment_records"
     */
    public function testPropertyPaymentRecords()
    {
    }

    /**
     * Test attribute "annual_reports"
     */
    public function testPropertyAnnualReports()
    {
    }

    /**
     * Test attribute "tax_reports"
     */
    public function testPropertyTaxReports()
    {
    }

    /**
     * Test attribute "consumption_entries"
     */
    public function testPropertyConsumptionEntries()
    {
    }

    /**
     * Test attribute "tax_return"
     */
    public function testPropertyTaxReturn()
    {
    }

    /**
     * Test attribute "account_item_statements"
     */
    public function testPropertyAccountItemStatements()
    {
    }

    /**
     * Test attribute "month_end"
     */
    public function testPropertyMonthEnd()
    {
    }

    /**
     * Test attribute "year_end"
     */
    public function testPropertyYearEnd()
    {
    }

    /**
     * Test attribute "walletables"
     */
    public function testPropertyWalletables()
    {
    }

    /**
     * Test attribute "companies"
     */
    public function testPropertyCompanies()
    {
    }

    /**
     * Test attribute "invitations"
     */
    public function testPropertyInvitations()
    {
    }

    /**
     * Test attribute "sign_in_logs"
     */
    public function testPropertySignInLogs()
    {
    }

    /**
     * Test attribute "backups"
     */
    public function testPropertyBackups()
    {
    }

    /**
     * Test attribute "opening_balances"
     */
    public function testPropertyOpeningBalances()
    {
    }

    /**
     * Test attribute "system_conversion"
     */
    public function testPropertySystemConversion()
    {
    }

    /**
     * Test attribute "resets"
     */
    public function testPropertyResets()
    {
    }

    /**
     * Test attribute "partners"
     */
    public function testPropertyPartners()
    {
    }

    /**
     * Test attribute "items"
     */
    public function testPropertyItems()
    {
    }

    /**
     * Test attribute "sections"
     */
    public function testPropertySections()
    {
    }

    /**
     * Test attribute "tags"
     */
    public function testPropertyTags()
    {
    }

    /**
     * Test attribute "account_items"
     */
    public function testPropertyAccountItems()
    {
    }

    /**
     * Test attribute "taxes"
     */
    public function testPropertyTaxes()
    {
    }

    /**
     * Test attribute "user_matchers"
     */
    public function testPropertyUserMatchers()
    {
    }

    /**
     * Test attribute "deal_templates"
     */
    public function testPropertyDealTemplates()
    {
    }

    /**
     * Test attribute "manual_journal_templates"
     */
    public function testPropertyManualJournalTemplates()
    {
    }

    /**
     * Test attribute "cost_allocations"
     */
    public function testPropertyCostAllocations()
    {
    }

    /**
     * Test attribute "approval_flow_routes"
     */
    public function testPropertyApprovalFlowRoutes()
    {
    }

    /**
     * Test attribute "expense_application_templates"
     */
    public function testPropertyExpenseApplicationTemplates()
    {
    }

    /**
     * Test attribute "workflows"
     */
    public function testPropertyWorkflows()
    {
    }

    /**
     * Test attribute "oauth_applications"
     */
    public function testPropertyOauthApplications()
    {
    }

    /**
     * Test attribute "oauth_authorizations"
     */
    public function testPropertyOauthAuthorizations()
    {
    }

    /**
     * Test attribute "bank_accountant_staff_users"
     */
    public function testPropertyBankAccountantStaffUsers()
    {
    }
}
